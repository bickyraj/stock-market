apiVersion: v1
data:
  application-prod.properties: |-
    spring.rabbitmq.host=host.docker.internal
    spring.rabbitmq.port=5672
    server.port=3030

    spring.application.name=demo

    spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/demospring_db
    spring.datasource.username=admin
    spring.datasource.password=admin
    spring.datasource.driver-class-name=org.postgresql.Driver

    spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
    spring.jpa.hibernate.ddl-auto=update

    beam.kafka.bootstrap-servers=host.docker.internal:29092,host.docker.internal:39092
    beam.kafka.topic=stock-market
    beam.jdbc.url=jdbc:postgresql://host.docker.internal:5432/demospring_db
    beam.jdbc.username=admin
    beam.jdbc.password=admin

    spring.kafka.bootstrap-servers=host.docker.internal:29092,host.docker.internal:39092
    spring.kafka.consumer.group-id=stock-market
    spring.kafka.consumer.auto-offset-reset=earliest
    spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
    spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
    spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
    spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

    management.endpoints.web.exposure.include=*
    management.endpoint.prometheus.enabled=true


    spring.security.oauth2.client.registration.keycloak.client-id=stock-market
    spring.security.oauth2.client.registration.keycloak.client-secret=DjrjDDhEfrkgOHjgXew9eRb5hbPYD3Kq
    spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
    spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
    spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

    spring.security.oauth2.client.provider.keycloak.issuer-uri = http://host.docker.internal:7000/realms/stock-market
    spring.security.oauth2.client.provider.keycloak.user-info-uri = http://host.docker.internal:7000/realms/stock-market/protocol/openid-connect/userinfo
    spring.security.oauth2.client.provider.keycloak.token-uri = http://host.docker.internal:7000/realms/stock-market/protocol/openid-connect/token
    spring.security.oauth2.client.provider.keycloak.authorization-uri = http://host.docker.internal:7000/realms/stock-market/protocol/openid-connect/auth

    # Spring Security
    spring.security.oauth2.resourceserver.jwt.issuer-uri = http://host.docker.internal:7000/auth/realms/stock-market
    spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://host.docker.internal:7000/auth/realms/stock-market/protocol/openid-connect/certs
kind: ConfigMap
metadata:
  name: production-config
  namespace: argocd
